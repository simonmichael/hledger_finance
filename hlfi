#!/usr/bin/env bash
# hlfi - reporting tool for hledger project finances.
# Uses ./hledger.conf.
# shellcheck shell=bash disable=SC2317

set -e
cd "$(dirname "$0")"
SCRIPT=$(basename "$0")
RECENTLY="-p quarterly from 1/1 to tomorrow"

line() { echo "--------------------------------------------------------------------------------"; }

help() { # show this help
    line
    cat <<EOF
hlfi - reporting tool for hledger project finances
Usage: hlfi [COMMAND]
Commands:
$(grep -E '^\w.*\(\) *{ *#' "$SCRIPT" | sed -e 's/() *{//' | column -t -s'#')
CMD 	       run other hledger commands

Add hledger options to customise reports.
EOF
}

reports() {  # show main README reports in terminal. Add -o html for HTML.
    # avoid -t as it currently doesn't indent in HTML
    bs "$@"
    echo
    is "$@"
    echo
    bs -Y -b2017 "$@"
    echo
    is -T -Y -b2017 "$@"
    echo
}

barcharts() {  # show main hledger-bar charts in terminal
    b-a "$@"
    echo
    b-r "$@"
    echo
    b-x "$@"
    echo
}

linecharts() {  # show main hledger-plot charts in terminal
    l-a "$@"
    echo
    l-r "$@"
    echo
    l-x "$@"
    echo
}


# The following hledger commands also rely on ./hledger.conf.

bs() { # recent balance sheets
    hledger bs -E "$RECENTLY" "$@"
}

is() { # recent income statements
    hledger is -S "$RECENTLY" "$@"
}

a() { # recent assets
    hledger bal type:a -HE "$RECENTLY" "$@"
}

l() { # recent liabilities
    hledger bal type:l -HE "$RECENTLY" "$@"
}

r() { # recent revenues
    hledger bal type:r -S --invert "$RECENTLY" "$@"
}

x() { # recent expenses
    hledger bal type:x -S --invert "$RECENTLY" "$@"
}

b-a() { # assets bar chart
    echo "Quarterly net worth:"
    hledger-bar -v 200 -Q type:al -H "$@"
}

b-r() { # revenues bar chart
    echo "Quarterly revenues:"
    hledger-bar -v 40 -Q type:r --invert "$@"
}

b-x() { # expenses bar chart
    echo "Quarterly expenses:"
    hledger-bar -v 40 -Q type:x --invert "$@"
}

# XXX with partial workaround for https://github.com/gooofy/drawilleplot/issues/4
l-a() { # assets line chart
    hledger plot -- bal --depth=1 ^assets   --historical  --terminal --rcParams '{"figure.figsize":[8,3]}' --no-today -q --title "hledger assets" "$@" | sed 's/⠀/ /g'
}

l-r() { # revenues line chart
    hledger plot -- bal --depth=1 ^revenues --monthly --invert  --terminal --rcParams '{"figure.figsize":[8,3]}' --drawstyle 'steps-mid' --no-today -q --title "hledger monthly revenues" "$@" | sed 's/⠀/ /g'
}

l-x() { # expenses line chart
    hledger plot -- bal --depth=1 ^expenses --monthly --terminal --rcParams '{"figure.figsize":[8,3]}' --drawstyle 'steps-mid' --no-today -q --title "hledger monthly expenses" "$@" | sed 's/⠀/ /g'
}


if [[ $# -eq 0 ]]; then help                  # no args shows help
elif declare -f "$1" > /dev/null; then "$@";  # arg 1 selects a function above
else hledger "$@"; fi                         # or fall through to hledger
exit
